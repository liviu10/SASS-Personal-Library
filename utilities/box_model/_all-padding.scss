@import '../global_functions/_global_functions';
@import '../global_variables/_global_variables';

@mixin all-padding ($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left) {
    @if 
    $var_padding_top != 0 and ($var_padding_right == 0px and $var_padding_bottom == 0px and $var_padding_left == 0px) {
        padding#{-top}: all-padding($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left);
        padding#{-bottom}: ($padding_bottom/$var_base_font_size) * 1rem;
    }
    @else if 
    $var_padding_right != 0 and ($var_padding_top == 0px and $var_padding_bottom == 0px and $var_padding_left == 0px) {
        padding#{-right}: all-padding($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left);
        padding#{-top}: ($padding_top/$var_base_font_size) * 1rem;
        padding#{-bottom}: ($padding_bottom/$var_base_font_size) * 1rem;
    }
    @else if 
    $var_padding_bottom != 0 and ($var_padding_right == 0px and $var_padding_top == 0px and $var_padding_left == 0px) {
        padding#{-bottom}: all-padding($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left);
        padding#{-top}: ($padding_top/$var_base_font_size) * 1rem;
    }
    @else if 
    $var_padding_left != 0 and ($var_padding_right == 0px and $var_padding_bottom == 0px and $var_padding_top == 0px) {
        padding#{-left}: all-padding($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left);
        padding#{-top}: ($padding_top/$var_base_font_size) * 1rem;
        padding#{-bottom}: ($padding_bottom/$var_base_font_size) * 1rem;
    }
    @else if 
    $var_padding_top == 0px and $var_padding_right == 0px and $var_padding_bottom == 0px and $var_padding_left == 0px {
        padding: all-padding($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left)
    }
    @else if 
    $var_padding_top != $var_padding_bottom and $var_padding_right != $var_padding_left {
        padding: all-padding($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left)
    }
    @else if
    ($var_padding_top != 0 and $var_padding_bottom != 0 and $var_padding_right != 0 and $var_padding_left != 0) and
    ($var_padding_top == $var_padding_bottom and $var_padding_top == $var_padding_right and $var_padding_top == $var_padding_left)  {
        padding: all-padding($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left);
    }
}

@mixin horizontal-vertical-padding ($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left) {
    @if 
    ($var_padding_top == $var_padding_bottom and $var_padding_top != 0 and $var_padding_bottom != 0) and 
    ($var_padding_right == $var_padding_left and $var_padding_right != 0 and $var_padding_left != 0) {
        padding: horizontal-vertical-padding($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left)
    }
    @else if
    ($var_padding_top == $var_padding_bottom and $var_padding_top == 0px and $var_padding_bottom == 0px) and
    ($var_padding_right == $var_padding_left and $var_padding_right != 0 and $var_padding_left != 0) {
        padding: horizontal-vertical-padding($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left)
    }
    @else if
    ($var_padding_top == $var_padding_bottom and $var_padding_top != 0 and $var_padding_bottom != 0) and
    ($var_padding_right == $var_padding_left and $var_padding_right == 0px and $var_padding_left == 0px) {
        padding: horizontal-vertical-padding($var_padding_top, $var_padding_right, $var_padding_bottom, $var_padding_left)
    }
}