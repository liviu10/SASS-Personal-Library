@import '../global_functions/_global_functions';
@import '../global_variables/_global_variables';
@import '../box_model/_all-margin';
@import '../box_model/_all-padding';
@import '../box_model/_width-height';
@import '../box_model/_all-border';
@import '../box_model/_border-radius';
@import '../flexbox/_flex-center-left';
@import '../typography/_btn-typography';

@mixin pagination-group {
    @include flex-center-left-center();
    & .btn {
        @include all-margin(0px, 0px, 0px, 0px);
        @include all-padding(0px, 0px, 0px, 0px);
        @include width(100px);
        @include height(30px);
        &__text {
            @include btn-typography;
        }
        @each $class, $properties in $button_classes {
            &--#{$class} {
                @include all-border(1px, 1px, 1px, 1px);
                @include width(50px);
                background-color: map-get($map: $properties, $key: background-color);
                border-color: map-get($map: $properties, $key: border-color);
            }
            &--#{$class}:first-of-type {
                @include left-border-radius(5px, 5px);
                @include width(100px);
            }
            &--#{$class}:last-of-type {
                @include right-border-radius(5px, 5px);
                @include width(100px);
            }
        }
        &:hover {
            cursor: pointer;
            opacity: 0.85;
        }
        &:focus {
            outline: none;
        }
    }
    @each $breakpoint in $component_breakpoints {
        @if $breakpoint < 600px and $breakpoint >= 375px {
            @media only screen and (max-width: $breakpoint) and (orientation: portrait) {
                & .btn:not(:first-of-type), & .btn:not(:last-of-type) {
                    @include width(38px);
                }
                & .btn:first-of-type, & .btn:last-of-type {
                    @include width(88px);
                }
            }
        } @else if $breakpoint < 375px {
            @media only screen and (max-width: $breakpoint) and (orientation: portrait) {
                & .btn:first-of-type, & .btn:last-of-type {
                    @include horizontal-vertical-padding(0px, 3px, 0px, 3px);
                    width: auto;
                }
            }
        }
    }
}